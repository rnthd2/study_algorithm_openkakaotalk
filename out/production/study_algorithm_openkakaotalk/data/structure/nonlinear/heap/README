안녕하세요~
저번주는 육아하다가 허리가 삐끗해서 물리치료 중인데
처음에는 제대로 걷지도 못했는데 이제는 좀 앉아있을만합니다
돌아올 수 있을까 걱정했는데 다행입니다
진짜 건강이 쵝오입니다ㅠ.ㅠ

오늘은 트리에 이어 힙에 대해서 알아보려고 합니다.
이번 주는 힙 기본의 이해와 우선순위 큐
다음 주는 힙정렬, 허프만 알고리즘을 계획하고 있습니다.

힙은 최대값 혹은 최소값을 최대한 빠르게 찾아내기 위하여 고안된 자료구조로서 아래와 같은 속성(heap property)을 가집니다.

1)완전이진트리(Complete Binary Tree)를 기본으로 한다.
무조건 완전이진트리 일 필요는 없지만 완전이진트리여야 노드의 삽입과 삭제의 최적의 구조이기 때문입니다.
그 이유는 삽입과 삭제의 과정을 먼저 살펴봐야합니다
참고로 완전이진트리는 모든 자식노드가 2개 이하이면서 자식노드가 1개라면 부모의 왼쪽에 존재하는 트리를 말합니다.

2)부모 노드는 자식 노드보다 가장 작거나(최소 힙) 가장 크다(최대 힙)
위 2의 특징으로 트리에서 가장 큰 값 혹은 가장 작은 값을 찾을 때는 O(1)이 소요됩니다.

1-1) 노드의 삽입
최대 힙인지 최소 힙인지 판단합니다.
트리 기준 가장 마지막 자리에 노드를 삽입합니다.
부모와 비교하여 최대 힙/최소 힙 규칙에 따라 교환합니다.
위 과정을 반복합니다.

1-2) 노드의 삭제
최대 힙인지 최소 힙인지 판단합니다.
루트 노드를 제거합니다(최대 값 혹은 최소 값이 저장된 루트만 제거가 가능합니다)
가장 마지막 노드를 루트 자리에 넣습니다
자식과 비교하여 최대 힙/최소 힙 규칙에 따라 교환합니다.
위 과정을 반복합니다.

위 과정으로 삽입과 삭제 시, O(logN)이 소요됩니다.

두 번째로 우선순위 큐에 대해서 알아보고자 합니다.

우선순위 큐는 일반적인 큐와 다르게 우선순위가 높은 순으로 자료가 나옵니다.
우선순위 큐를 구현하는 방법에는 배열, 연결리스트, 힙이 있는데
힙이 이들 중 가장 효율적, 일반적으로 사용됩니다.

그럼 위의 이론들을 바탕으로 하여 문제를 풀어봐야됩니다 ㅠ.ㅠㅎㅎ

문제 1
널리 잘 알려진 자료구조 중 최대 힙이라는 것이 있다. 최대 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오.
배열에 자연수 x를 넣는다.
배열에서 가장 큰 값을 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.

입력
첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 만약 x가 자연수라면 배열에 x라는 값을 넣는(추가하는) 연산이고, x가 0이라면 배열에서 가장 큰 값을 출력하고 그 값을 배열에서 제거하는 경우이다. 입력되는 자연수는 2^31보다 작다.

출력
입력에서 0이 주어진 회수만큼 답을 출력한다. 만약 배열이 비어 있는 경우인데 가장 큰 값을 출력하라고 한 경우에는 0을 출력하면 된다.
https://www.acmicpc.net/problem/11279

문제 2
수빈이는 동생에게 "가운데를 말해요" 게임을 가르쳐주고 있다. 수빈이가 정수를 하나씩 외칠때마다 동생은 지금까지 수빈이가 말한 수 중에서 중간값을 말해야 한다. 만약, 그동안 수빈이가 외친 수의 개수가 짝수개라면 중간에 있는 두 수 중에서 작은 수를 말해야 한다.
예를 들어 수빈이가 동생에게 1, 5, 2, 10, -99, 7, 5를 순서대로 외쳤다고 하면, 동생은 1, 1, 2, 2, 2, 2, 5를 차례대로 말해야 한다. 수빈이가 외치는 수가 주어졌을 때, 동생이 말해야 하는 수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에는 수빈이가 외치는 정수의 개수 N이 주어진다. N은 1보다 크거나 같고, 100,000보다 작거나 같은 자연수이다. 그 다음 N줄에 걸쳐서 수빈이가 외치는 정수가 차례대로 주어진다. 정수는 -10,000보다 크거나 같고, 10,000보다 작거나 같다.

출력
한 줄에 하나씩 N줄에 걸쳐 수빈이의 동생이 말해야하는 수를 순서대로 출력한다.
https://www.acmicpc.net/problem/1655

문제 3
일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.
1. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.
2. 나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.
3. 그렇지 않으면 J를 인쇄합니다.
예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.
내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.

입력
현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때,

출력
내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.

제한사항
* 현재 대기목록에는 1개 이상 100개 이하의 문서가 있습니다.
* 인쇄 작업의 중요도는 1~9로 표현하며 숫자가 클수록 중요하다는 뜻입니다.
* location은 0 이상 (현재 대기목록에 있는 작업 수 - 1) 이하의 값을 가지며 대기목록의 가장 앞에 있으면 0, 두 번째에 있으면 1로 표현합니다.
https://programmers.co.kr/learn/courses/30/lessons/42587

감사합니다.

참고:
https://feel5ny.github.io/2017/12/09/CS_01/
https://makemethink.tistory.com/136
https://c10106.tistory.com/1716
https://hannom.tistory.com/36
https://www.youtube.com/watch?v=ihyg2OR8IR0