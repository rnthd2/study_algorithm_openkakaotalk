안녕하세요~
오늘은 정말 정신이 하나도 없네요ㅠ.ㅠ;
이제서야 모든 일들을 정리하고 약속을 지키려 늦은 시간이나마 다시 왔습니다
저번 주에 공지한대로 금주는 최소신장트리와 C사 K사 입사문제를 풀어보려고 합니다.

최소신장트리에서
신장트리(spanning tree)는 모든 정점(node)들이 연결 되어 있어야하고 n개의 정점이 n-1개의 간선으로 연결되어 있어야합니다.
그렇기 때문에 그래프 안에는 많은 신장 트리가 존재할 수도 있죠
하지만 애초에 트리는 사이클이 존재하지 않는 걸로 다른 그래프들과 구분 하였으니 신장트리도 마찬가지입니다.
신장트리는 트리의 일종이니까요
최소신장트리(MST, Minimum Spanning Tree)는 위에 언급된 많은 신장 트리 중 간선들의 가중치의 합이 최소인 트리를 의미합니다.
참고로 최소신장트리를 구현하는 대표적인 방법에는 크루스칼 알고리즘 프림 알고리즘이 있습니다.

그럼 최소신장트리 관련된 문제입니다.

문제 1
그래프가 주어졌을 때, 그 그래프의 최소 스패닝 트리를 구하는 프로그램을 작성하시오.
최소 스패닝 트리는, 주어진 그래프의 모든 정점들을 연결하는 부분 그래프 중에서 그 가중치의 합이 최소인 트리를 말한다.

입력
첫째 줄에 정점의 개수 V(1 ≤ V ≤ 10,000)와 간선의 개수 E(1 ≤ E ≤ 100,000)가 주어진다. 다음 E개의 줄에는 각 간선에 대한 정보를 나타내는 세 정수 A, B, C가 주어진다. 이는 A번 정점과 B번 정점이 가중치 C인 간선으로 연결되어 있다는 의미이다. C는 음수일 수도 있으며, 절댓값이 1,000,000을 넘지 않는다.
그래프의 정점은 1번부터 V번까지 번호가 매겨져 있고, 임의의 두 정점 사이에 경로가 있다. 최소 스패닝 트리의 가중치가 -2,147,483,648보다 크거나 같고, 2,147,483,647보다 작거나 같은 데이터만 입력으로 주어진다.

출력
첫째 줄에 최소 스패닝 트리의 가중치를 출력한다.
https://www.acmicpc.net/problem/1197

문제 2
n개의 섬 사이에 다리를 건설하는 비용(costs)이 주어질 때, 최소의 비용으로 모든 섬이 서로 통행 가능하도록 만들 때 필요한 최소 비용을 return 하도록 solution을 완성하세요.
다리를 여러 번 건너더라도, 도달할 수만 있으면 통행 가능하다고 봅니다. 예를 들어 A 섬과 B 섬 사이에 다리가 있고, B 섬과 C 섬 사이에 다리가 있으면 A 섬과 C 섬은 서로 통행 가능합니다.

제한사항
섬의 개수 n은 1 이상 100 이하입니다.
costs의 길이는 ((n-1) * n) / 2이하입니다.
임의의 i에 대해, costs[i][0] 와 costs[i] [1]에는 다리가 연결되는 두 섬의 번호가 들어있고, costs[i] [2]에는 이 두 섬을 연결하는 다리를 건설할 때 드는 비용입니다.
같은 연결은 두 번 주어지지 않습니다. 또한 순서가 바뀌더라도 같은 연결로 봅니다. 즉 0과 1 사이를 연결하는 비용이 주어졌을 때, 1과 0의 비용이 주어지지 않습니다.
모든 섬 사이의 다리 건설 비용이 주어지지 않습니다. 이 경우, 두 섬 사이의 건설이 불가능한 것으로 봅니다.
연결할 수 없는 섬은 주어지지 않습니다.

https://programmers.co.kr/learn/courses/30/lessons/42861

두 번째로는 트리와 관련된 C사 K사 입사문제입니다.

C사 문제입니다.
Consider a Java or C++ array say X which is sorted and no two elements in it are same. How best can you find an index say i such that element at that index is also i. That is X[i] = i.
As clarification she also gave me an example:
https://manducku.tistory.com/43

K사 2019년 문제입니다…. 문제가 기이이인 관계로 링크만 가져왔습니다
https://programmers.co.kr/learn/courses/30/lessons/42892

참고 :
http://www.ktword.co.kr/abbr_view.php?m_temp1=3444
https://gmlwjd9405.github.io/2018/08/28/algorithm-mst.html

이번 주도 화이팅하세요!
감사합니다.
